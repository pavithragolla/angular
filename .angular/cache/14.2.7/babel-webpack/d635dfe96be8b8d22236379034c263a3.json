{"ast":null,"code":"import { getAuth, signInWithEmailAndPassword, signOut } from 'firebase/auth';\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(router) {\n      this.router = router;\n      this.isAuthenticated = false;\n      this.isLoading = false;\n      this.passwordMatched = true;\n    }\n\n    login(form) {\n      const auth = getAuth();\n      signInWithEmailAndPassword(auth, form.email, form.password).then(userCredential => {\n        this.isAuthenticated = true;\n        this.router.navigate(['']);\n      }).catch(error => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        this.isAuthenticated = false;\n      }).finally(() => this.isLoading = false);\n    }\n\n    register(form) {\n      if (this.isLoading) return;\n      this.isLoading = true;\n\n      if (form.password != form.confirm_password) {\n        this.passwordMatched = false;\n        return;\n      }\n\n      const auth = getAuth();\n      createUserWithEmailAndPassword(auth, form.email, form.password).then(userCredential => {\n        this.isAuthenticated = true;\n        this.router.navigate(['']);\n      }).catch(error => {\n        this.isAuthenticated = false;\n        const errorCode = error.code;\n        const errorMessage = error.message; // ..\n      }) // console.log(this.submit);\n      .finally(() => this.isLoading = false);\n    }\n\n    logout() {\n      const auth = getAuth();\n      signOut(auth).then(() => {\n        this.router.navigate(['login']);\n        this.isAuthenticated = false;\n      }).catch(error => {\n        alert('error');\n      });\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.Router));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}